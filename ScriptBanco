



CREATE TABLE IF NOT EXISTS CLIENTE(
ID_CLIENTE INTEGER PRIMARY KEY AUTOINCREMENT,
CPF CHAR(14) NOT NULL,
NOME VARCHAR(30) NOT NULL,
SOBRENOME VARCHAR(40) NOT NULL,
EMAIL VARCHAR(60) NOT NULL,
DATANASC DATE NOT NULL,
CEP CHAR(9),
BAIRRO VARCHAR(50),
RUA VARCHAR(60),
NUMERO VARCHAR(6),
CIDADE CHAR(4),
TELEFONE VARCHAR(14),
CELULAR VARCHAR(14),
DATAREG DATE
);


CREATE TABLE IF NOT EXISTS PRODUTO(
IDPRODUTO INTEGER  PRIMARY KEY AUTOINCREMENT,
NOME VARCHAR(45) NOT NULL,
MARCA VARCHAR(45) NOT NULL,
PRECO INTEGER NOT NULL,
DATAREG DATE NOT NULL,
DATAVALIDADE DATE NOT NULL,
ID_CLIENTE INTEGER,
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) 
);

CREATE TABLE IF NOT EXISTS SERVICO(
ID_SERVICO INTEGER PRIMARY KEY AUTOINCREMENT,
NOMESERV VARCHAR (30) NOT NULL,
PRECO DECIMAL(5,2) NOT NULL
);

CREATE TABLE IF NOT EXISTS CABELEIREIRO(
ID_CABELEIREIRO INTEGER PRIMARY KEY AUTOINCREMENT,
EMAIL VARCHAR (60) NOT NULL,
SENHA VARCHAR (60) NOT NULL,
NOME VARCHAR (45) NOT NULL
);

CREATE TABLE IF NOT EXISTS DESPESAS(
ID_DESPESA INTEGER PRIMARY KEY AUTOINCREMENT,
NOME VARCHAR (45) NOT NULL,
VALOR DECIMAL(5,2) NOT NULL,
PAGO BOOLEAN NOT NULL,
REPOE BOOLEAN NOT NULL,
DESCRICAO VARCHAR (200),
DATAVENC DATE NOT NULL,
DATAPAGAMENTO DATE NOT NULL,
DATAREGI DATE NOT NULL,
ID_CABELEIREIRO INT,
FOREIGN KEY(ID_CABELEIREIRO) REFERENCES CABELEIREIRO(ID_CABELEIREIRO) 
);

CREATE TABLE IF NOT EXISTS PRODUTO_SERVICO(
ID_PRODUTO INT,
ID_SERVICO INT,
FOREIGN KEY(ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO), 
FOREIGN KEY(ID_SERVICO) REFERENCES SERVICO(ID_SERVICO)
);

CREATE TABLE IF NOT EXISTS ESTOQUE(
ID_ESTOQUE INTEGER PRIMARY KEY AUTOINCREMENT,
QUANTIDADE INT NOT NULL,
BALANCOTOTAL DECIMAL(5,2) NOT NULL
);

CREATE TABLE IF NOT EXISTS PRODUTO_ESTOQUE(
ID_PRODUTO INT,
ID_ESTOQUE INT,
FOREIGN KEY(ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO), 
FOREIGN KEY(ID_ESTOQUE) REFERENCES ESTOQUE(ID_ESTOQUE)
);


CREATE TABLE IF NOT EXISTS AGENDAMENTO(
ID_AGENDAMENTO INTEGER PRIMARY KEY AUTOINCREMENT,
DATA DATE NOT NULL,
HORARIO DATE NOT NULL,
ID_CLIENTE INT NOT NULL,
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE) 
);

CREATE TABLE IF NOT EXISTS AGENDAMENTO_SERVICO(
ID_AGENDAMENTO INT,
ID_SERVICO INT,
FOREIGN KEY(ID_AGENDAMENTO) REFERENCES AGENDAMENTO(ID_AGENDAMENTO), 
FOREIGN KEY(ID_SERVICO) REFERENCES SERVICO(ID_SERVICO)
);

CREATE TABLE IF NOT EXISTS ORCAMENTO(
ID_ORCAMENTO INTEGER PRIMARY KEY AUTOINCREMENT,
NOME VARCHAR(30) NOT NULL,
JANEIRO INTEGER NOT NULL,
FEVEREIRO INTEGER NOT NULL,
MARCO INTEGER NOT NULL,
ABRIL INTEGER NOT NULL,
MAIO INTEGER NOT NULL,
JUNHO INTEGER NOT NULL,
JULHO INTEGER NOT NULL,
AGOSTO INTEGER NOT NULL,
SETEMBRO INTEGER NOT NULL,
OUTUBRO INTEGERNOT NULL,
NOVEMBRO INTEGER NOT NULL,
DEZEMBRO INTEGER NOT NULL,
PREVISTO BOOLEAN,
ANO VARCHAR(4)
);

/* TESTES */

drop table produto;

SELECT * FROM PRODUTO;
SELECT ID_PRODUTO, NOME, MARCA, PRECO, DATAREG, DATAVALIDADE FROM PRODUTO WHERE ID_PRODUTO = 3;

SELECT ID_PRODUTO, NOME, MARCA, PRECO, DATAREG, DATAVALIDADE FROM PRODUTO ORDER BY DATAREG DESC;

SELECT NOME,SOBRENOME,CELULAR,EMAIL FROM CLIENTE WHERE NOME LIKE '%m%';

SELECT ID_CLIENTE, NOME, SOBRENOME, CELULAR, EMAIL FROM CLIENTE;


INSERT INTO ORCAMENTO (NOME, JANEIRO, FEVEREIRO, MARCO, ABRIL, MAIO, JUNHO, JULHO, AGOSTO, SETEMBRO, OUTUBRO, NOVEMBRO, DEZEMBRO, PREVISTO) VALUES ("Conta de LUZ", 350.50, 300.00,300.00,300.00,300.00,300.00,300.00,300.00,300.00,300.00,300.00,300.00, true);
SELECT * FROM ORCAMENTO;

SELECT datetime(1092941466, 'unixepoch'); 

SELECT SUM("JANEIRO") FROM ORCAMENTO WHERE ANO = "2021";
